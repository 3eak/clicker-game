{"version":3,"sources":["logo.svg","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","middle","thunk","persistConfig","key","storage","stateReconciler","autoMergeLevel2","store","createStore","persistReducer","state","action","type","paper","payload","autoClickers","money","salePrice","stock","wood","stage","employees","research","thinkSpeed","applyMiddleware","persistor","persistStore","configureStore","App","props","interest","this","window","setInterval","click","updateThinker","timedEvents","setState","calculateInterest","Math","random","sellPaper","floor","randomWood","updatePaper","updateStock","updateWood","updateResearch","timerId","clearInterval","think","pow","updateAutoClickers","updateMoney","selling","toBeSold","updateEmployees","updateThinkSpeed","updateSalePrice","className","onClick","autoClickerAdd","chopWood","updateStage","decreaseSalePrice","increaseSalePrice","toFixed","renderClickButton","renderAutoClickButton","renderChopWoodButton","renderResearchTeamButton","hireEmployees","trainEmployees","renderSaleButtons","renderFinancesSection","renderPlaySection","renderResearchSection","Component","withRouter","connect","dispatch","updPaper","updAutoClickers","updMoney","price","updStock","updWood","updStage","updEmployees","updResearch","updThinkSpeed","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","loading","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.dd416de7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage';\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\n\r\nlet middle = [thunk];\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage: storage,\r\n  stateReconciler: autoMergeLevel2\r\n};\r\n\r\nconst actions = (state, action) => {\r\n  switch (action.type) {\r\n    /*case \"example\":\r\n      return {\r\n        ...state,\r\n        exampleNewProp: action.payload\r\n      };\r\n    */\r\n\r\n    case \"updatePaper\":\r\n      return {\r\n        ...state,\r\n        paper: action.payload\r\n      }\r\n    \r\n    case \"updateAutoClickers\":\r\n      return {\r\n        ...state,\r\n        autoClickers: action.payload\r\n      }\r\n\r\n    case \"updateMoney\":\r\n      return {\r\n        ...state,\r\n        money: action.payload\r\n      }\r\n\r\n    case \"updateSalePrice\":\r\n      return {\r\n        ...state,\r\n        salePrice: action.payload\r\n      }\r\n    \r\n    case \"updateStock\":\r\n      return {\r\n        ...state,\r\n        stock: action.payload\r\n      }\r\n      \r\n    case \"updateWood\":\r\n      return {\r\n        ...state,\r\n        wood: action.payload\r\n      }\r\n\r\n    case \"updateStage\":\r\n      return {\r\n        ...state,\r\n        stage: action.payload\r\n      }\r\n    \r\n    case \"updateEmployees\":\r\n      return {\r\n        ...state,\r\n        employees: action.payload\r\n      }\r\n    \r\n    case \"updateResearch\":\r\n      return {\r\n        ...state,\r\n        research: action.payload\r\n      }\r\n\r\n    case \"updateThinkSpeed\":\r\n      return {\r\n        ...state,\r\n        thinkSpeed: action.payload\r\n      }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\n/*export const examplePropMethod = {\r\n  type: \"example\",\r\n  payload: true\r\n};\r\n*/\r\n\r\nexport const updPaper = (paper) => {\r\n  return {\r\n    type: \"updatePaper\",\r\n    payload: paper\r\n  }\r\n}\r\n\r\nexport const updAutoClickers = (autoClickers) => {\r\n  return {\r\n    type: \"updateAutoClickers\",\r\n    payload: autoClickers\r\n  }\r\n}\r\n\r\nexport const updMoney = (money) => {\r\n  return {\r\n    type: \"updateMoney\",\r\n    payload: money\r\n  }\r\n}\r\n\r\nexport const updSalePrice = (salePrice) => {\r\n  return {\r\n    type: \"updateSalePrice\",\r\n    payload: salePrice\r\n  }\r\n}\r\n\r\nexport const updStock = (stock) => {\r\n  return {\r\n    type: \"updateStock\",\r\n    payload: stock\r\n  }\r\n}\r\n\r\nexport const updWood = (wood) => {\r\n  return {\r\n    type: \"updateWood\",\r\n    payload: wood\r\n  }\r\n}\r\n\r\nexport const updStage = (stage) => {\r\n  return {\r\n    type: \"updateStage\",\r\n    payload: stage\r\n  }\r\n}\r\n\r\nexport const updEmployees = (employees) => {\r\n  return {\r\n    type: \"updateEmployees\",\r\n    payload: employees\r\n  }\r\n}\r\n\r\nexport const updResearch = (research) => {\r\n  return {\r\n    type: \"updateResearch\",\r\n    payload: research\r\n  }\r\n}\r\n\r\nexport const updThinkSpeed = (thinkSpeed) => {\r\n  return {\r\n    type: \"updateThinkSpeed\",\r\n    payload: thinkSpeed\r\n  }\r\n}\r\n\r\nconst configureStore = () => {\r\n  if (module.hot) {\r\n    module.hot.accept(actions, () => {\r\n      store.replaceReducer(actions);\r\n    });\r\n  }\r\n  return store ;\r\n};\r\n\r\nexport const store = createStore (\r\n  persistReducer(persistConfig, actions),\r\n  {},\r\n  applyMiddleware(...middle)\r\n  );\r\nexport const persistor = persistStore(store);\r\n\r\nexport default configureStore;","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.scss';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter} from 'react-router-dom';\r\nimport { updPaper, updAutoClickers, updMoney, updSalePrice, updStock, updWood, updStage, updEmployees, updResearch, updThinkSpeed } from './store';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      paper: this.props.paper || 0,\r\n      stock: this.props.stock || 0,\r\n      autoClickers: this.props.autoClickers || 0,\r\n      money: this.props.money || 0,\r\n      salePrice: this.props.salePrice || 0.25,\r\n      interest: 0.08/this.props.salePrice,\r\n      wood: this.props.wood === 0 ? 0 : this.props.wood || 1000,\r\n      stage: this.props.stage || 1,\r\n      employees: this.props.employees || 1,\r\n      research: this.props.research || 0,\r\n      thinkSpeed: this.props.thinkSpeed || 1\r\n    }\r\n  }\r\n\r\n  /*\r\n  *   Run on App Load, check if any existing auto clickers saved and add an interval for every single one\r\n  *   Then start the infinite selling loop\r\n  */\r\n  componentDidMount() {\r\n    if (this.state.autoClickers > 0) {\r\n      window.setInterval(() => this.click(), 1000 / this.state.autoClickers)\r\n    }\r\n    if (this.state.stage > 1) {\r\n      this.updateThinker()\r\n    }\r\n    this.timedEvents()\r\n  }\r\n\r\n  // Interest in paper, more things can be added to this when we add more boosts and marketing etc.\r\n  calculateInterest() {\r\n    this.setState({interest: 0.08 / this.state.salePrice})\r\n  }\r\n\r\n  // These events are run every tenth of a second\r\n  timedEvents() {\r\n    window.setInterval(() => {\r\n      this.calculateInterest()\r\n      if (Math.random() < 0.08/this.state.salePrice) {\r\n        this.sellPaper(Math.floor( Math.random() / this.state.salePrice ))\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  // Add paper to the paper total\r\n  click() {\r\n    if (this.state.wood > 0) {\r\n      var randomWood = Math.random()\r\n      this.setState({paper: this.state.paper + 1, stock: this.state.stock + 1, wood: this.state.wood - randomWood > 0 ? this.state.wood - randomWood : 0}, () => {\r\n        this.props.updatePaper(this.state.paper)\r\n        this.props.updateStock(this.state.stock)\r\n        this.props.updateWood(this.state.wood)\r\n      })\r\n    }\r\n  }\r\n\r\n  think() {\r\n    this.setState({research: this.state.research + 1}, () => {\r\n      this.props.updateResearch(this.state.research)\r\n    })\r\n  }\r\n\r\n  updateThinker() {\r\n    if (this.timerId) {\r\n      window.clearInterval(this.timerId)\r\n    }\r\n    this.timerId = window.setInterval(() => {this.think()}\r\n      ,(1000 / Math.pow(this.state.thinkSpeed, this.state.employees + this.state.thinkSpeed))\r\n    )\r\n  }\r\n\r\n  // Add a new auto clicker\r\n  autoClickerAdd() {\r\n    this.setState({autoClickers: this.state.autoClickers + 1, money: this.state.money - 25}, () => {\r\n      this.props.updateAutoClickers(this.state.autoClickers)\r\n      this.props.updateMoney(this.state.money)\r\n    })\r\n    window.setInterval(() => this.click(), 1000)\r\n  }\r\n\r\n  // Add more wood\r\n  chopWood() {\r\n    this.setState({wood: this.state.wood + 800, money: this.state.money - 50}, () => {\r\n      this.props.updateWood(this.state.wood)\r\n      this.props.updateMoney(this.state.money)\r\n    })\r\n    window.setInterval(() => this.click(), 1000)\r\n  }\r\n\r\n  // Sell paper\r\n  sellPaper(selling) {\r\n    var toBeSold = selling > 10 ? 10 : selling\r\n    if (this.state.stock > 0) {\r\n        this.setState({stock: toBeSold < this.state.stock ? this.state.stock - toBeSold : 0, \r\n        money: toBeSold < this.state.stock ? this.state.money + (this.state.salePrice * toBeSold) \r\n        : this.state.money + (this.state.salePrice * toBeSold - (((this.state.stock - toBeSold) * -1) * this.state.salePrice))}, () => {\r\n          this.props.updateMoney(this.state.money)\r\n          this.props.updateStock(this.state.stock)\r\n        })\r\n      }\r\n  }\r\n\r\n  hireEmployees() {\r\n    this.setState({employees: this.state.employees + 1, money: this.state.money - 500}, () => {\r\n      this.props.updateEmployees(this.state.employees)\r\n      this.props.updateMoney(this.state.money)\r\n      this.updateThinker()\r\n    })\r\n  }\r\n\r\n  trainEmployees() {\r\n    this.setState({thinkSpeed: this.state.thinkSpeed + 1, money: this.state.money - 1000}, () => {\r\n      this.props.updateThinkSpeed(this.state.thinkSpeed)\r\n      this.props.updateMoney(this.state.money)\r\n      this.updateThinker()\r\n    })\r\n  }\r\n\r\n  // Increase sale price\r\n  increaseSalePrice() {\r\n    this.setState({salePrice: this.state.salePrice + 0.01}, () => {\r\n      this.props.updateSalePrice(this.state.salePrice)\r\n    })\r\n  }\r\n\r\n  // Decrease Sale Price\r\n  decreaseSalePrice() {\r\n    if (this.state.salePrice > 0.01) {\r\n      this.setState({salePrice: this.state.salePrice - 0.01}, () => {\r\n        this.props.updateSalePrice(this.state.salePrice)\r\n      })\r\n    }\r\n  }\r\n\r\n  renderClickButton() {\r\n    return (\r\n      <div className='clicker' onClick={() => this.click()}>\r\n        Make Paper\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderAutoClickButton() {\r\n    return (\r\n      <div className={this.state.money > 25 ? 'clicker' : 'clicker disabled'} onClick={this.state.money > 25 ? () => this.autoClickerAdd() : ''}>\r\n        Buy Auto Paper Maker (£25)\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderChopWoodButton() {\r\n    return (\r\n      <div className={this.state.money > 50 ? 'clicker' : 'clicker disabled'} onClick={this.state.money > 50 ? () => this.chopWood() : ''}>\r\n        Chop Down Wood (£50)\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderResearchTeamButton() {\r\n    return (\r\n      <div className={this.state.money > 1000 ? 'clicker' : 'clicker disabled'} onClick={this.state.money > 1000 ? () => {\r\n        this.setState({stage: 2, money: this.state.money - 1000}, () => {\r\n          this.props.updateStage(this.state.stage)\r\n          this.props.updateMoney(this.state.money)\r\n        })\r\n      } : ''}>\r\n        Buy Research Team (£1000)\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderSaleButtons() {\r\n    return (\r\n      <div className='saleButtons'>\r\n        <div className='clicker' onClick={() => this.decreaseSalePrice()}>\r\n          Decrease Price\r\n        </div>\r\n        <div className='clicker' onClick={() => this.increaseSalePrice()}>\r\n          Increase Price\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderPlaySection() {\r\n    return (\r\n      <div>\r\n        <p className='clicks'>\r\n          Total Paper: {this.state.paper}\r\n        </p>\r\n        <p className='clicks'>\r\n          Paper Per Second: {this.state.autoClickers}\r\n        </p>\r\n        <p className='clicks'> \r\n          Remaining Wood: {this.state.wood.toFixed(2)}\r\n        </p>\r\n        {this.renderClickButton()}\r\n        {this.state.paper > 100 ? this.renderAutoClickButton() : ''}\r\n        {this.state.paper > 500 ? this.renderChopWoodButton() : ''}\r\n        {this.state.paper > 2000 && this.state.stage === 1 ? this.renderResearchTeamButton() : ''}\r\n        {this.state.stage > 1 ?\r\n          <div> \r\n            <div className='clicker' onClick={() => this.hireEmployees()}>\r\n            Hire Employees (£500)\r\n            </div>\r\n            <div className='clicker' onClick={() => this.trainEmployees()}>\r\n              Train Employees (£1000)\r\n            </div>\r\n          </div>\r\n          : ''}\r\n      </div>      \r\n    )\r\n  }\r\n\r\n  renderFinancesSection() {\r\n    return (\r\n      <div>\r\n        <p className='clicks'>\r\n        Stock: {this.state.stock}\r\n        </p>\r\n        <p className='clicks'>\r\n          Money: £{this.state.money.toFixed(2)}\r\n        </p>\r\n        <p className='clicks'>\r\n          Public Interest: {(this.state.interest*100).toFixed(2)}%\r\n        </p>\r\n        <p className='clicks'>\r\n          Selling Price: £{this.state.salePrice.toFixed(2)}\r\n        </p>\r\n        {this.renderSaleButtons()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderResearchSection() {\r\n    return (\r\n      <div>\r\n        <p className='clicks'>\r\n          Research: {this.state.research}\r\n        </p>\r\n        <p className='clicks'>\r\n          Employees: {this.state.employees}\r\n        </p>\r\n        <p className='clicks'>\r\n          Think Speed: {this.state.thinkSpeed}\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <div className={this.state.paper > 10 ? \"finances\" : \"finances hidden\"}>\r\n          {this.renderFinancesSection()}\r\n        </div>\r\n        <div className=\"play\">\r\n          \r\n          {this.renderPlaySection()}\r\n          </div>\r\n        <div className={this.state.stage > 1 ? \"researchTeam\" : \"researchTeam hidden\"}>\r\n          {this.renderResearchSection()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ...state\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updatePaper: (paper) => {\r\n      dispatch(updPaper(paper))\r\n    },\r\n    updateAutoClickers: (autoClickers) => {\r\n      dispatch(updAutoClickers(autoClickers))\r\n    },\r\n    updateMoney: (money) => {\r\n      dispatch(updMoney(money))\r\n    },\r\n    updateSalePrice: (price) => {\r\n      dispatch(updSalePrice(price))\r\n    },\r\n    updateStock: (stock) => {\r\n      dispatch(updStock(stock))\r\n    },\r\n    updateWood: (wood) => {\r\n      dispatch(updWood(wood))\r\n    },\r\n    updateStage: (stage) => {\r\n      dispatch(updStage(stage))\r\n    },\r\n    updateEmployees: (employees) => {\r\n      dispatch(updEmployees(employees))\r\n    },\r\n    updateResearch: (research) => {\r\n      dispatch(updResearch(research))\r\n    },\r\n    updateThinkSpeed: (thinkSpeed) => {\r\n      dispatch(updThinkSpeed(thinkSpeed))\r\n    }\r\n  }};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps) (App));\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from  'react-redux';\nimport './index.css';\nimport App from './App';\nimport configureStore from './store';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport { persistor, store } from './store';\n\n/*  Frontend Structure:\n*   1. configureStore() => Create store (load previous store)\n*   2. render(App) =>\n*       2a. Set Provider as Store (use store info for frontend storage)\n*       2b. Use PersistGate to send user to LoginPage if not logged in, and keep user logged in after refresh \n*       2c. Use BrowserRouter and Component to render current page of the App\n*/\n\nconfigureStore();\n\nconst render = Component => {\n   return ReactDOM.render(\n    <Provider store={store}>\n      <PersistGate loading={''} persistor={persistor}>  \n       <BrowserRouter>\n         <Component />\n       </BrowserRouter>\n      </PersistGate>\n     </Provider>,\n     document.getElementById('root')\n   );\n };\n\nrender(App);\n\nif (module.hot) {\n   module.hot.accept('./App', () => {\n      const NextApp = require('./App').default;\n      render(NextApp);\n   });\n}\n\nserviceWorker.register();\n"],"sourceRoot":""}